# fly --target spring login --concourse-url https://ci.spring.io
# fly --target spring set-pipeline --config pipeline.yml --pipeline spring-guides-ci --load-vars-from credentials.yml
---
resources:
- name: image-source
  type: git
  source:
    uri: https://github.com/spring-guides/gs-rest-service.git
    paths: [complete/pom.xml, complete/build.gradle]
- name: ci
  type: git
  source:
    uri: https://github.com/dsyer/spring-guides-ci.git
    branch: mongo
- name: base-image
  type: docker-image
  source:
    email: {{docker-hub-email}}
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}
    repository: springio/spring-ci-base
- name: rabbit-base-image
  type: docker-image
  source:
    email: {{docker-hub-email}}
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}
    repository: springio/spring-rabbit-base
- name: mongo-base-image
  type: docker-image
  source:
    email: {{docker-hub-email}}
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}
    repository: springio/spring-mongo-base
- name: gs-accessing-data-mongodb
  type: git
  source:
    uri: https://github.com/spring-guides/gs-accessing-data-mongodb.git
- name: gs-messaging-rabbitmq
  type: git
  source:
    uri: https://github.com/spring-guides/gs-messaging-rabbitmq.git
- name: gs-rest-service
  type: git
  source:
    uri: https://github.com/spring-guides/gs-rest-service.git

jobs:
- name: image
  public: true
  serial: true
  plan:
  - aggregate:
    - get: ci
      trigger: true
    - get: image-source
      trigger: true
  - aggregate:
    - task: setup
      file: ci/image/setup.yml
      input_mapping:
        source: image-source
      params:
        PUBLIC_KEY: {{public-key}}
        PRIVATE_KEY: {{private-key}}
  - put: base-image
    params:
      build: build/image
- name: rabbit-image
  public: true
  serial: true
  plan:
  - aggregate:
    - get: ci
      trigger: true
    - get: image-source
      trigger: true
  - task: setup
    file: ci/image/setup.yml
    input_mapping:
      source: image-source
    params:
      PUBLIC_KEY: {{public-key}}
      PRIVATE_KEY: {{private-key}}
  - put: rabbit-base-image
    params:
      build: ci/rabbit
- name: mongo-image
  public: true
  serial: true
  plan:
  - aggregate:
    - get: ci
      trigger: true
    - get: image-source
      trigger: true
  - task: setup
    file: ci/image/setup.yml
    input_mapping:
      source: image-source
    params:
      PUBLIC_KEY: {{public-key}}
      PRIVATE_KEY: {{private-key}}
  - put: mongo-base-image
    params:
      build: ci/mongo

- name: gs-rest-service-maven
  plan:
  - aggregate:
    - get: ci
    - get: gs-rest-service
      trigger: true
    - get: base-image
      passed: [image]
  - task: maven
    file: ci/tasks/install.yml
    image: base-image
    input_mapping:
      source: gs-rest-service

- name: gs-rest-service-gradle
  plan:
  - aggregate:
    - get: ci
    - get: gs-rest-service
      trigger: true
    - get: base-image
      passed: [image]
  - task: gradle
    file: ci/tasks/build.yml
    image: base-image
    input_mapping:
      source: gs-rest-service

- name: gs-messaging-rabbitmq-maven
  plan:
  - aggregate:
    - get: ci
    - get: gs-messaging-rabbitmq
      trigger: true
    - get: rabbit-base-image
      passed: [rabbit-image]
  - task: maven
    file: ci/rabbit/install.yml
    image: rabbit-base-image
    input_mapping:
      source: gs-messaging-rabbitmq
- name: gs-messaging-rabbitmq-gradle
  plan:
  - aggregate:
    - get: ci
    - get: gs-messaging-rabbitmq
      trigger: true
    - get: rabbit-base-image
      passed: [rabbit-image]
  - task: gradle
    file: ci/rabbit/build.yml
    image: rabbit-base-image
    input_mapping:
      source: gs-messaging-rabbitmq

- name: gs-accessing-data-mongodb-maven
  plan:
  - aggregate:
    - get: ci
    - get: gs-accessing-data-mongodb
      trigger: true
    - get: mongo-base-image
      passed: [mongo-image]
  - task: maven
    file: ci/mongo/install.yml
    image: mongo-base-image
    input_mapping:
      source: gs-accessing-data-mongodb
- name: gs-accessing-data-mongodb-gradle
  plan:
  - aggregate:
    - get: ci
    - get: gs-accessing-data-mongodb
      trigger: true
    - get: mongo-base-image
      passed: [mongo-image]
  - task: gradle
    file: ci/mongo/build.yml
    image: mongo-base-image
    input_mapping:
      source: gs-accessing-data-mongodb

groups:
- name: all
  jobs:
  - image
  - rabbit-image
  - mongo-image
  - gs-rest-service-maven
  - gs-rest-service-gradle
  - gs-messaging-rabbitmq-maven
  - gs-messaging-rabbitmq-gradle
  - gs-accessing-data-mongodb-maven
  - gs-accessing-data-mongodb-gradle
- name: images
  jobs:
  - image
  - rabbit-image
- name: maven
  jobs:
  - gs-rest-service-maven
  - gs-messaging-rabbitmq-maven
  - gs-accessing-data-mongodb-maven
- name: gradle
  jobs:
  - gs-rest-service-gradle
  - gs-messaging-rabbitmq-gradle
  - gs-accessing-data-mongodb-gradle
- name: rabbit
  jobs:
  - gs-messaging-rabbitmq-maven
  - gs-messaging-rabbitmq-gradle
- name: mongo
  jobs:
  - gs-accessing-data-mongodb-maven
  - gs-accessing-data-mongodb-gradle
